package status

import "yumi/pkg/codes"

var (
	// OK ...
	OK = func() *Status { return new(codes.OK) }
	// Canceled ...
	Canceled = func() *Status { return new(codes.Canceled) }
	// Unknown ...
	Unknown = func() *Status { return new(codes.Unknown) }
	// InvalidArgument ...
	InvalidArgument = func() *Status { return new(codes.InvalidArgument) }
	// DeadlineExceeded ...
	DeadlineExceeded = func() *Status { return new(codes.DeadlineExceeded) }
	// NotFound ...
	NotFound = func() *Status { return new(codes.NotFound) }
	// AlreadyExists ...
	AlreadyExists = func() *Status { return new(codes.AlreadyExists) }
	// PermissionDenied ...
	PermissionDenied = func() *Status { return new(codes.PermissionDenied) }
	// ResourceExhausted ...
	ResourceExhausted = func() *Status { return new(codes.ResourceExhausted) }
	// FailedPrecondition ...
	FailedPrecondition = func() *Status { return new(codes.FailedPrecondition) }
	// Aborted ...
	Aborted = func() *Status { return new(codes.Aborted) }
	// OutOfRange ...
	OutOfRange = func() *Status { return new(codes.OutOfRange) }
	// Unimplemented ...
	Unimplemented = func() *Status { return new(codes.Unimplemented) }
	// Internal ...
	Internal = func() *Status { return new(codes.Internal) }
	// Unavailable ...
	Unavailable = func() *Status { return new(codes.Unavailable) }
	// DataLoss ...
	DataLoss = func() *Status { return new(codes.DataLoss) }
	// Unauthenticated ...
	Unauthenticated = func() *Status { return new(codes.Unauthenticated) }
	// InvalidRequest ...
	InvalidRequest = func() *Status { return new(codes.InvalidRequest) }
)
